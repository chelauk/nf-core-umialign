/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/


//
// General configuration options
//

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]


    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: MULTIQC {
        publishDir = [
            path: { "${params.outdir}/Reports" },
            mode: params.publish_dir_mode
        ]
    }
}

//
// Reporting options
//

process {

    withName: FASTQC {
        ext.args   = '--quiet'
        publishDir = [
            path: { "${params.outdir}/Reports/FASTQC/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: HS1    {
        ext.args   = 'pre_collapse'
        publishDir = [
            path: { "${params.outdir}/Reports/PICARD/hs_metrics/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: HS2    {
        ext.args   = 'post_collapse'
        ext.args2  = "VALIDATION_STRINGENCY=SILENT"
        publishDir = [
            path: { "${params.outdir}/Reports/PICARD/hs_metrics/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: ER1    {
        ext.args   = 'pre_collapse'
        publishDir = [
            path: { "${params.outdir}/Reports/FGBIO/error_rate/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: ER2    {
        ext.args   = 'post_collapse'
        publishDir = [
            path: { "${params.outdir}/Reports/FGBIO/error_rate/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: PICARD_ESTIMATELIBRARYCOMPLEXITY {
        publishDir = [
            path: { "${params.outdir}/Reports/PICARD/estimate_library_complexity/${meta.id}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: PICARD_MARKADAPTERS {
        publishDir = [
            path: { "${params.outdir}/Reports/PICARD/mark_illumina_adapters/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: '*metrics'
        ]
    }

    withName: QUALIMAP_BAMQC {
        publishDir = [
        path: { "${params.outdir}/Reports/BAMQC/${meta.id}" },
        mode: params.publish_dir_mode
        ]
    }
}

//
//  Output options
//

process {

    withName: PICARD_UMIMARKDUPLICATES {
        ext.args   = "VALIDATION_STRINGENCY=SILENT"
        publishDir = [
            [
                path: { "${params.outdir}/Processed/PICARD/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: '*{bam,bai}'
            ],
            [
                path: { "${params.outdir}/Reports/PICARD/umi_aware_mark_duplicates/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: '*metrics'
            ]
        ]
    }

    withName: FGBIO_GROUPREADSBYUMI {
        ext.args   = { params.group_reads_strategy ? "-s ${params.group_reads_strategy}" : "-s adjacency"}
        publishDir = [
            path: { "${params.outdir}/Reports/FGBIO/group_reads_by_umi/${meta.id}" },
            mode: params.publish_dir_mode,
            pattern: '*_umi_histogram.txt'
        ]
    }

    withName: FGBIO_CALLMOLECULARCONSENSUSREADS {
        ext.args   = { params.consensus_min_reads ? "--min-reads ${params.consensus_min_reads}" : "--min-reads 1" }
        publishDir = [
            enabled: false
        ]
    }

    withName: FGBIO_FILTERCONSENSUSREADS {
// use default minimum reads filter of 1 or take minimum reads from parameters.
        ext.args   = { params.filter_min_reads ? "--min-reads ${params.filter_min_reads}" : "--min-reads 1" }
        publishDir = [
            enabled: false
        ]
    }

    withName: B2FQ1 {
        publishDir = [
            enabled: false
        ]
    }

    withName: B2FQ2 {
        ext.args   = "VALIDATION_STRINGENCY=SILENT"
        publishDir = [
            enabled: false
        ]
    }

    withName: BM1 {
        ext.args = '-K 100000000 -M'
		publishDir = [
            enabled: false
        ]
    }

    withName: BM2 {
        ext.args = '-K 100000000 -M'
        publishDir = [
            enabled: false
        ]
    }

    withName: PMB1 {
        ext.prefix = { ( "${meta.numLanes}".toInteger() > 1) ? "${meta.id}_pre_collapse" : "${meta.patient}_${meta.sample}_pre_collapse"}
        publishDir = [
            enabled: false
        ]
    }

    withName: PMB2 {
        ext.args   = "VALIDATION_STRINGENCY=SILENT"
        ext.prefix = { "${meta.id}_post_collapse" }
        publishDir = [
            enabled: false
        ]
    }

    withName: PICARD_BED_TO_INTERVAL_LIST {
        publishDir = [
            enabled: false
        ]
    }

    withName: FGBIO_FASTQTOBAM {
        publishDir = [
            enabled: false
        ]
    }

    withName: SAMBAMBA_MERGE {
        publishDir = [
            enabled: false
        ]
    }
}
